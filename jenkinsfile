pipeline {
    agent any
    tools{
        jdk 'jdk17'
        nodejs 'node21'
    }
    environment {
          APP_NAME = "auth-service"
          SCANNER_HOME = tool"sonar-scanner"   
          RELESE = "1.0.0"
          DOCKER_USER="sachinthadev"
          DOCKER_PASS="docker-cred"
          IMAGE_NAME = "${DOCKER_USER}" + "/"+ "APP_NAME"
          IMAGE_TAG = "${RELESE}.${BUILD_NUMER}"       
    }
    stages {
         stage("Cleanup Workspace") {
             steps {
                cleanWs()
             }
         }
         stage("Checkout from SCM") {
             steps {
                     git branch: 'main', credentialsId: 'github', url: 'https://github.com/Sachintha-dev/auth_service.git'
             }
         }

           stage('Clean Dependencies') {
            steps {
                sh 'npm cache clean --force'
                sh 'rm -rf node_modules'
            }
        }

          stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('Build') {
            steps {
                sh 'npm run build'
            }
        }

        stage('Test') {
            steps {
                sh 'npm test'
            }
        }

         stage('Trivy FS Scan') {
            steps {
                sh "trivy fs --format json -o Trivy-fs-json ."
            }
        }

          stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar') {
                    sh "$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectKey=auth_service -Dsonar.projectName=auth_service"
                }
            }
        }

        stage("SonarQube Quality Gates"){
               steps {
                   waitForQualityGate abortPipeline: false ,credentialsId: 'sonarqube-token'
               }
        }

         stage('OWASP Dependency SCAN') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'Dependency Check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }

        stage('Docker Build And Tag') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                        sh "docker build -t sachinthadev/auth_service:latest ."
                    }
                }
            }
        }

         stage('Trivy Image Scan') {
            steps {
                sh "trivy image --format table -o fs-report.html sachinthadev/auth_service:latest"
            }
        }
         stage('Docker Image Push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                         sh "docker build -t ${IMAGE_NAME}:${IMAGE_TAG} ."
                    }
                }
            }
        }

       stage('Docker Deploye to Dev') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                        sh "docker stop ${APP_NAME} || true"
                        sh "docker rm ${APP_NAME} || true"
                        sh "docker run -d --name ${APP_NAME} -p 3000:3000 ${IMAGE_NAME}:${IMAGE_TAG}"
                    }
                }
            }
        }

        //  stage("Update the Deployment Tags") {
        //     steps {
        //         sh """
        //             cat deployment.yaml
        //             sed -i 's/${APP_NAME}.*/${APP_NAME}:${IMAGE_TAG}/g' deployment.yaml
        //             cat deployment.yaml
        //         """
        //     }
        //  }
        //  stage("Push the changed deployment file to GitHub") {
        //     steps {
        //         sh """
        //             git config --global user.name "sachinthadev"
        //             git config --global user.email "sudeshsachintha2016@gmail.com"
        //             git add deployment.yaml
        //             git commit -m "Updated Deployment Manifest"
        //         """
        //         withCredentials([gitUsernamePassword(credentialsId: 'github', gitToolName: 'Default')]) {
        //             sh "git push https://github.com/Sachintha-dev/auth_service.git main"
        //         }
        //     }
        //  }
    }
}
